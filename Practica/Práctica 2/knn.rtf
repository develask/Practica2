{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red144\green144\blue144;
\red242\green242\blue242;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags4 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil \trpadr100 
\clvertalt \clshdrawnil \clwWidth3940\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl300\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import java.io.BufferedReader;\cb1 \
\cb3 import java.io.FileNotFoundException;\cb1 \
\cb3 import java.io.FileReader;\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 import weka.classifiers.Classifier;\cb1 \
\cb3 import weka.classifiers.lazy.IBk;\cb1 \
\cb3 import weka.core.Instance;\cb1 \
\cb3 import weka.core.Instances;\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 public class KNN \{\cb1 \
\cb3 \'a0public static BufferedReader readDataFile(String filename) \{\cb1 \
\cb3 \'a0 BufferedReader inputReader = null;\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0 try \{\cb1 \
\cb3 \'a0 inputReader = new BufferedReader(new FileReader(filename));\cb1 \
\cb3 \'a0 \} catch (FileNotFoundException ex) \{\cb1 \
\cb3 \'a0 System.err.println("File not found: " + filename);\cb1 \
\cb3 \'a0 \}\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0 return inputReader;\cb1 \
\cb3 \'a0\}\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0public static void main(String[] args) throws Exception \{\cb1 \
\cb3 \'a0 BufferedReader datafile = readDataFile("ads.txt");\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0 Instances data = new Instances(datafile);\cb1 \
\cb3 \'a0 data.setClassIndex(data.numAttributes() - 1);\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0 //do not use first and second\cb1 \
\cb3 \'a0 Instance first = data.instance(0);\cb1 \
\cb3 \'a0 Instance second = data.instance(1);\cb1 \
\cb3 \'a0 data.delete(0);\cb1 \
\cb3 \'a0 data.delete(1);\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0 Classifier ibk = new IBk();\'a0\cb1 \
\cb3 \'a0 ibk.buildClassifier(data);\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0 double class1 = ibk.classifyInstance(first);\cb1 \
\cb3 \'a0 double class2 = ibk.classifyInstance(second);\cb1 \
\cb3 \'a0\'a0\cb1 \
\cb3 \'a0 System.out.println("first: " + class1 + "\\nsecond: " + class2);\cb1 \
\cb3 \'a0\}\cb1 \
\cb3 \}\cb1 \cell \lastrow\row
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb5 \strokec4 \
}